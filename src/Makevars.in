# Paths of installation
NVCC=@MY_CUDA_HOME@/bin/nvcc

# Target architectures
# CUTLASS_NVCC_ARCHS is not needed for <75 as no cutlass is involved
cu61= 61 70 75 80 86
cu61_flags=$(foreach i,$(cu61),--generate-code arch=compute_$(i),code=sm_$(i))
cu61_nums=$(subst $() $(),;,$(cu61))

cu75= 75 80 86
cu75_nums=$(subst $() $(),;,$(cu75))
cu75_flags=$(foreach i,$(cu75),--generate-code arch=compute_$(i),code=sm_$(i)) -DCUTLASS_NVCC_ARCHS='$(cu75_nums)'



PKG_LIBS = $(LAPACK_LIBS) $(BLAS_LIBS) $(FLIBS) $(SHLIB_OPENMP_CXXFLAGS) \
	@MY_LIB_FLAGS@ @MY_CUDA_LIBS@ 
PKG_CXXFLAGS = $(SHLIB_OPENMP_CXXFLAGS) @MY_PKG_FLAGS@

@MY_SSE2@ 
@MY_SSE3@ 
@MY_SSSE3@
@MY_SSE41@
@MY_AVX@ 
@MY_AVX2@ 
@MY_AVX512F@

all_cu_flags=-std=c++14 -Xcompiler -fopenmp -DSCHLATHERS_MACHINE  \
	--expt-extended-lambda 	$(CLINK_CPPFLAGS) -I $(R_INCLUDE_DIR) \
	-I@MY_CUDA_HOME@/include -I./cutlass \
	-Xcompiler -fpic -DUSEGPU -g -x cu

# Details of CUDA compilation


%61.o: %61.cu
	$(NVCC) $(cu61_flags) $(all_cu_flags) -c $< -o $@
%75.o: %75.cu
	$(NVCC) $(cu75_flags) $(all_cu_flags) -c $< -o $@ 

# Final compilation

OBJECTS = @MY_CU_FILES@ @MY_C_FILES@	

all: $(SHLIB) 
.PHONY: all

#all: $(SHLIB) clean
# .PHONY: all clean
# Clean-up rules
#clean:
##	rm -r -f *.o Makevars
#	rm -f Makevars

